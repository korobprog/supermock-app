import { fireEvent, render, screen } from '@testing-library/react';
import { describe, expect, it } from 'vitest';

import SlotDashboardPage from '../slots';
import { mockRouter, resetMockRouter } from '@/test/router-mock';

describe('SlotDashboardPage CTA', () => {
  it('routes to interviewer form with slot intent when creating interviewer slot', async () => {
    resetMockRouter();

    render(<SlotDashboardPage />);

    fireEvent.click(screen.getByRole('button', { name: /–ò–¥—É—Ç —Å–µ–π—á–∞—Å/i }));
    const languageSelect = screen.getByLabelText('–Ø–∑—ã–∫') as HTMLSelectElement;
    fireEvent.change(languageSelect, { target: { value: 'üá®üá≥ Chinese' } });

    expect(await screen.findByText('–°–ª–æ—Ç–æ–≤ –Ω–µ—Ç ‚Äî —Å–æ–∑–¥–∞–π—Ç–µ —Å–≤–æ–π')).toBeInTheDocument();

    fireEvent.click(screen.getByRole('button', { name: '–°—Ç–∞—Ç—å –∏–Ω—Ç–µ—Ä–≤—å—é–µ—Ä–æ–º' }));

    expect(mockRouter.push).toHaveBeenCalledWith({
      pathname: '/interviewer',
      query: expect.objectContaining({
        language: 'üá®üá≥ Chinese',
        tab: 'live',
        role: 'interviewer',
        showUtc: 'true',
        onlyFree: 'false',
        onlyWithParticipants: 'false'
      })
    });
  });

  it('routes to candidate form when creating candidate slot', async () => {
    resetMockRouter();

    render(<SlotDashboardPage />);

    fireEvent.click(screen.getByRole('button', { name: /–ò–¥—É—Ç —Å–µ–π—á–∞—Å/i }));
    const languageSelect = screen.getByLabelText('–Ø–∑—ã–∫') as HTMLSelectElement;
    fireEvent.change(languageSelect, { target: { value: 'üá®üá≥ Chinese' } });

    expect(await screen.findByText('–°–ª–æ—Ç–æ–≤ –Ω–µ—Ç ‚Äî —Å–æ–∑–¥–∞–π—Ç–µ —Å–≤–æ–π')).toBeInTheDocument();

    fireEvent.click(screen.getByRole('button', { name: '–ö–∞–Ω–¥–∏–¥–∞—Ç' }));
    mockRouter.push.mockClear();

    fireEvent.click(screen.getByRole('button', { name: '–°—Ç–∞—Ç—å –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–º' }));

    expect(mockRouter.push).toHaveBeenCalledWith({
      pathname: '/interview',
      query: expect.objectContaining({
        language: 'üá®üá≥ Chinese',
        tab: 'live',
        role: 'candidate'
      })
    });
  });
});
